// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PaperStore.WareHouseData;

#nullable disable

namespace PaperStore.Migrations
{
    [DbContext(typeof(PaperWarehouseContext))]
    partial class PaperWarehouseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PaperStore.WareHouseData.CompaniesList", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("company_name");

                    b.Property<bool?>("IsArchive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("companiesList", (string)null);
                });

            modelBuilder.Entity("PaperStore.WareHouseData.CurrentStock", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("AddtionalInfoId")
                        .HasColumnType("bigint")
                        .HasColumnName("addtional_info_Id");

                    b.Property<bool?>("Archive")
                        .HasColumnType("bit")
                        .HasColumnName("archive");

                    b.Property<DateTime?>("InputData")
                        .HasColumnType("datetime")
                        .HasColumnName("input_data");

                    b.Property<long>("ProductName")
                        .HasColumnType("bigint")
                        .HasColumnName("product_name");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateData")
                        .HasColumnType("datetime")
                        .HasColumnName("update_data");

                    b.HasKey("Id")
                        .HasName("PK__current___3214EC07C15014C7");

                    b.HasIndex("AddtionalInfoId");

                    b.HasIndex("ProductName");

                    b.ToTable("current_stock", null, t =>
                        {
                            t.HasTrigger("SetBasicsDataToNewItems");
                        });
                });

            modelBuilder.Entity("PaperStore.WareHouseData.LoginModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LoginOptions", null, t =>
                    {
                        t.HasTrigger("SetCreatedDateToNewAccount");
                    });

                });

            modelBuilder.Entity("PaperStore.WareHouseData.StockAdditionalInfo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AdditionalInfo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("additional_info");

                    b.HasKey("Id")
                        .HasName("PK__stock_ad__3214EC070CAB2132");

                    b.ToTable("stock_additional_info", (string)null);
                });

            modelBuilder.Entity("PaperStore.WareHouseData.StockItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("CompanyId")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnName("company_Id");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("item_name");

                    b.HasKey("Id")
                        .HasName("PK__stock_it__3214EC07E3A7402F");

                    b.HasIndex("CompanyId");

                    b.ToTable("stock_items", (string)null);
                });

            modelBuilder.Entity("PaperStore.WareHouseData.CurrentStock", b =>
                {
                    b.HasOne("PaperStore.WareHouseData.StockAdditionalInfo", "AddtionalInfoNavigation")
                        .WithMany("CurrentStocks")
                        .HasForeignKey("AddtionalInfoId")
                        .HasConstraintName("FK_current_stock_stock_additional_info");

                    b.HasOne("PaperStore.WareHouseData.StockItem", "ProductNameNavigation")
                        .WithMany("CurrentStocks")
                        .HasForeignKey("ProductName")
                        .IsRequired()
                        .HasConstraintName("FK_current_stock_stock_items");

                    b.Navigation("AddtionalInfoNavigation");

                    b.Navigation("ProductNameNavigation");
                });

            modelBuilder.Entity("PaperStore.WareHouseData.StockItem", b =>
                {
                    b.HasOne("PaperStore.WareHouseData.CompaniesList", "Company")
                        .WithMany("StockItems")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_stock_items_companiesList");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("PaperStore.WareHouseData.CompaniesList", b =>
                {
                    b.Navigation("StockItems");
                });

            modelBuilder.Entity("PaperStore.WareHouseData.StockAdditionalInfo", b =>
                {
                    b.Navigation("CurrentStocks");
                });

            modelBuilder.Entity("PaperStore.WareHouseData.StockItem", b =>
                {
                    b.Navigation("CurrentStocks");
                });
#pragma warning restore 612, 618
        }
    }
}
