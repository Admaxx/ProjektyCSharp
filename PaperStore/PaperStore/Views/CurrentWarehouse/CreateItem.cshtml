@model PaperStore.WareHouseData.CurrentStock

@{
    ViewData["Title"] = "Dodaj";
}

<h1>Dodaj nowy produkt</h1>
@ViewBag.ErrorMsg
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="CreateItem">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Qty" class="control-label"></label>
                <input asp-for="Qty" class="form-control" />
                <span asp-validation-for="Qty" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ProductName" class="control-label"></label>
                @Html.DropDownListFor(item => item.ProductName, new SelectList(@ViewBag.ProductList, "Id", "ItemName"))
                <span asp-validation-for="ProductName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="AddtionalInfoId" class="control-label"></label>
                @Html.DropDownListFor(item => item.AddtionalInfoId, new SelectList(@ViewBag.AdditionalInfo, "Id", "AdditionalInfo"))
                <span asp-validation-for="AddtionalInfoId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Wprowadź" class="btn btn-outline-success" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index"> <input type="submit" value="Wróć do listy" class="btn btn-outline-info" /></a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
